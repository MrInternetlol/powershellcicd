# This is a basic workflow to help you get started with Actions

name: Build-Test-Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branche
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branch:
      - main


defaults:
  run:
    shell: pwsh

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup PowerShell module cache
        id: cacher
        uses: actions/cache@v3
        with:
          path: "~/.local/share/powershell/Modules"
          key: ${{ runner.os }}-PSScriptAnalyzer
      - name: Install required PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop

  Lint_with_PSScriptAnalyzer:
    runs-on: ubuntu-latest
    needs:
      - install-dependencies
    steps:
      - name: Lint with PowerShell Script Analyzer
        run: |
          Write-Output "$PSScriptRoot"
          Invoke-ScriptAnalyzer -Path *.ps1 -Recurse -Outvariable issues
          $errors   = $issues.Where({$_.Severity -eq 'Error'})
          $warnings = $issues.Where({$_.Severity -eq 'Warning'})
          if ($errors) {
              Write-Error "There were $($errors.Count) errors and $($warnings.Count) warnings total." -ErrorAction Stop
          } else {
              Write-Output "There were $($errors.Count) errors and $($warnings.Count) warnings total."
          }
#    pester-test:
#      name: Pester test
#      runs-on: ubuntu-latest
#      steps:
#        - name: Check out repository code
#          uses: actions/checkout@v3
#        - name: Perform a Pester test from the command-line
#          shell: pwsh
#          run: Test-Path resultsfile.log | Should -Be $true
#        - name: Perform a Pester test from the Tests.ps1 file
#          shell: pwsh
#          run: |
#            Invoke-Pester Unit.Tests.ps1 -Passthru